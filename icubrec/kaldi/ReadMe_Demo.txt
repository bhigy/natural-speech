#------------------------------------------------------------------------------#
#Instruction to run the demo by using mic:

on terminal:
yarpserver

on new terminal:
~/projects/yarp-speech-sender/build/yarp-speech-sender
(input port /sender)

open pycharm (project Demo2Icub)
run pipeline/VAD_pipeline.py
run command: yarp connect /sender /reader:i
wait few seconds
run pipeline/CommandsRecognition_pipeline.py
----Or, without using pycharm----
on terminal:
python ~/projects/Demo2Icub/pipeline/VAD_pipeline.py
run command: yarp connect /sender /reader:i
wait few seconds
python ~/projects/Demo2Icub/pipeline/CommandsRecognition_pipeline.py
take care to kill all the sub-process generated by the python scripts
----------------------------------

read port /cmd_writer:o for the output

after terminating the execution of both python scripts:
    |on terminal run:
    |~/projects/Demo2Icub/pipeline/save_cleaner.sh



#-----------------------------------------------------------------------------#
# /save folder files:

the pipelines generates the following files:
<id>.wav : the audio segment selected by the VAD
<id>.scp
<id>.post
<id>.feat
<id>.txt : the output of thr command recognizer


#------------------------------------------------------------------------------#
#Instruction to run the pipelines by using sound_player as input

on terminal:
cd /home/storage/projects/natural-speech-master/icubrec/build/bin/
./sound_player

run command: yarp connnect /sound:o /reader:i 
instead of 'yarp connect /sender /reader:i' above

on new terminal:
yarp rpc --client /rpc

on new terminal:
yarp connect /rpc /cmd:io

on terminal where you run yarp rpc... :
play <wav_file_path>
(some files are already located in the bin folder, for these files is it sufficient to give the file name to the command instead the path)
#------------------------------------------------------------------------------#
